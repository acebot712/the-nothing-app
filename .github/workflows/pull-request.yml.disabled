name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run tsc

      - name: Check for console.log statements
        id: console_logs
        run: |
          if grep -r "console\.log" --include="*.ts" --include="*.tsx" ./app/; then
            echo "HAS_LOGS=true" >> $GITHUB_ENV
            echo "⚠️ Warning: console.log statements found."
          else
            echo "HAS_LOGS=false" >> $GITHUB_ENV
            echo "✅ No console.log statements found."
          fi

      - name: Comment on PR for console.log statements
        if: env.HAS_LOGS == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **Warning:** `console.log` statements were found in your PR. Consider removing them before merging to production.'
            })

  build-preview:
    name: Build Preview
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build preview bundle
        run: npx expo export --dump-sourcemap --dev --clear

      - name: Upload preview
        uses: actions/upload-artifact@v3
        with:
          name: expo-web-preview
          path: dist/
          retention-days: 3

      - name: Comment with preview link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 Preview build created successfully! Download the build from the workflow artifacts.'
            })

  size-report:
    name: Bundle Size Report
    runs-on: ubuntu-latest
    needs: build-preview
    steps:
      - uses: actions/checkout@v4

      - name: Download preview artifacts
        uses: actions/download-artifact@v3
        with:
          name: expo-web-preview
          path: dist

      - name: Generate size report
        id: size
        run: |
          TOTAL_SIZE=$(du -s -h dist | cut -f1)
          echo "BUNDLE_SIZE=$TOTAL_SIZE" >> $GITHUB_ENV
          echo "Bundle size: $TOTAL_SIZE"

      - name: Comment with size report
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `📊 **Bundle Size Report**\n\nTotal bundle size: \`${{ env.BUNDLE_SIZE }}\``
            })

  check-dependencies:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated packages
        id: outdated
        run: |
          # Get count of outdated packages
          OUTDATED_COUNT=$(npm outdated --json | jq 'length')
          echo "OUTDATED_COUNT=$OUTDATED_COUNT" >> $GITHUB_ENV

          if [ "$OUTDATED_COUNT" -gt "0" ]; then
            echo "⚠️ $OUTDATED_COUNT outdated packages found."
          else
            echo "✅ No outdated packages found."
          fi

      - name: Comment with dependency report
        if: env.OUTDATED_COUNT > '0'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `📦 **Dependency Check**\n\nFound \`${{ env.OUTDATED_COUNT }}\` outdated dependencies. Consider updating packages regularly for security and performance improvements.`
            })
